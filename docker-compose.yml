#version: '1.0'

services:
  users_db:
    image: postgres:12
    #    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5441:5432
    volumes:
      # db_data storage
      - postgres:/var/lib/postgresql/data
      # init scripts
      - $PWD/service/sql_init:/docker-entrypoint-initdb.d/
    logging:
      driver: json-file
      options:
        max-file: "10"
        max-size: "10m"
    networks:
      - backend

  users_db_test:
    image: postgres:12
    #    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5442:5432
    volumes:
      # db_data storage
      - postgres:/var/lib/postgresql/data
      # init scripts
      - $PWD/service/sql_init:/docker-entrypoint-initdb.d/
    logging:
      driver: json-file
      options:
        max-file: "10"
        max-size: "10m"

  rabbitmq:
    image: rabbitmq:3.10.7-management
    #    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=cism_user
      - RABBITMQ_DEFAULT_PASS=cism_user
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - backend

  service_local:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
      - users_db
    ports:
      - 7777:7777
    env_file:
      - config.sample.local.docker.env
    networks:
      - backend

  publisher_local:
    build:
      context: .
      dockerfile: DockerfilePublisher
    restart: on-failure
    depends_on:
      - rabbitmq
    env_file:
      - config.sample.local.docker.env
    networks:
      - backend





networks:
  backend:
    name: backend

volumes:
  rabbitmq:
  postgres: